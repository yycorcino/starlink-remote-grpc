syntax = "proto3";

package SpaceX.API.Device;

option go_package = "spacex.com/api/device";

import "spacex/api/device/command.proto";
import "spacex/api/device/common.proto";
import "spacex/api/device/wifi_util.proto";

message MeshConfig {
	optional 	string display_name = 1 [json_name="displayName"];
	optional 	bool apply_display_name = 2 [json_name="applyDisplayName"];
	optional 	.SpaceX.API.Device.MeshAuth auth = 3 [json_name="auth"];
	optional 	bool apply_auth = 4 [json_name="applyAuth"];
	optional 	int64 last_connected = 5 [json_name="lastConnected"];
	optional 	uint64 incarnation = 7 [json_name="incarnation"];
	optional 	string hardware_version = 9 [json_name="hardwareVersion"];
	optional 	bool supports_5ghz_high = 10 [json_name="supports5ghzHigh"];
}

message TlsConfig {
	optional 	string key = 1 [json_name="key"];
	optional 	string cert = 2 [json_name="cert"];
}

message HttpServer {
	optional 	string domain_name = 1 [json_name="domainName"];
	optional 	.SpaceX.API.Device.TlsConfig tls = 2 [json_name="tls"];
	optional 	string file_content_id = 3 [json_name="fileContentId"];
	optional 	string file_content_hash = 4 [json_name="fileContentHash"];
	repeated 	string access_control_allow_origins = 5 [json_name="accessControlAllowOrigins"];
}

message CaptivePortal {
	optional 	string url = 1 [json_name="url"];
	optional 	bool display_in_captive_browser = 2 [json_name="displayInCaptiveBrowser"];
}

message WifiConfig {
	optional 	string country_code = 3 [json_name="countryCode"];
	optional 	bool apply_country_code = 1085 [json_name="applyCountryCode"];
	optional 	bool pin_country_code = 53 [json_name="pinCountryCode"];
	optional 	bool apply_pin_country_code = 1086 [json_name="applyPinCountryCode"];
	optional 	bool custom_power_table = 54 [json_name="customPowerTable"];
	optional 	bool apply_custom_power_table = 1087 [json_name="applyCustomPowerTable"];
	optional 	bool setup_complete = 7 [json_name="setupComplete"];
	optional 	bool apply_setup_complete = 1010 [json_name="applySetupComplete"];
	optional 	uint32 version = 9 [json_name="version"];
	optional 	string mac_wan = 12 [json_name="macWan"];
	optional 	string mac_lan = 13 [json_name="macLan"];
	optional 	uint32 channel_2ghz = 19 [json_name="channel2ghz"];
	optional 	bool apply_channel_2ghz = 1013 [json_name="applyChannel2ghz"];
	optional 	uint32 channel_5ghz = 20 [json_name="channel5ghz"];
	optional 	bool apply_channel_5ghz = 1014 [json_name="applyChannel5ghz"];
	optional 	uint32 channel_5ghz_high = 57 [json_name="channel5ghzHigh"];
	optional 	bool apply_channel_5ghz_high = 1016 [json_name="applyChannel5ghzHigh"];
	repeated 	.SpaceX.API.Device.WifiConfig.MeshConfigsEntry mesh_configs = 33 [json_name="meshConfigs"];
	repeated 	.SpaceX.API.Device.WifiConfig.MeshConfigsUpdatesEntry mesh_configs_updates = 3033 [json_name="meshConfigsUpdates"];
	optional 	bool apply_mesh_configs = 1033 [json_name="applyMeshConfigs"];
	repeated 	.SpaceX.API.Device.PublicKey dynamic_keys = 22 [json_name="dynamicKeys"];
	optional 	bool apply_dynamic_keys = 39 [json_name="applyDynamicKeys"];
	optional 	bool is_repeater = 23 [json_name="isRepeater"];
	optional 	bool apply_is_repeater = 1031 [json_name="applyIsRepeater"];
	optional 	bool ap_mode = 51 [json_name="apMode"];
	optional 	bool apply_ap_mode = 1066 [json_name="applyApMode"];
	optional 	bool is_aviation = 49 [json_name="isAviation"];
	optional 	bool apply_is_aviation = 1064 [json_name="applyIsAviation"];
	optional 	int32 boot_count = 26 [json_name="bootCount"];
	optional 	.SpaceX.API.Device.BootInfo boot = 3001 [json_name="boot"];
	repeated 	string nameservers = 30 [json_name="nameservers"];
	optional 	bool apply_nameservers = 1054 [json_name="applyNameservers"];
	optional 	bool secure_dns = 50 [json_name="secureDns"];
	optional 	bool apply_secure_dns = 1065 [json_name="applySecureDns"];
	optional 	bool bypass_mode = 31 [json_name="bypassMode"];
	optional 	bool apply_bypass_mode = 1055 [json_name="applyBypassMode"];
	optional 	bool dfs_enabled = 42 [json_name="dfsEnabled"];
	optional 	bool apply_dfs_enabled = 1058 [json_name="applyDfsEnabled"];
	optional 	bool disable_mesh_onboarding = 52 [json_name="disableMeshOnboarding"];
	optional 	bool apply_disable_mesh_onboarding = 1067 [json_name="applyDisableMeshOnboarding"];
	optional 	bool disable_wireless_mesh_onboarding = 1097 [json_name="disableWirelessMeshOnboarding"];
	optional 	bool apply_disable_wireless_mesh_onboarding = 1098 [json_name="applyDisableWirelessMeshOnboarding"];
	optional 	bool apply_http_server = 1107 [json_name="applyHttpServer"];
	optional 	.SpaceX.API.Device.HttpServer http_server = 1108 [json_name="httpServer"];
	repeated 	.SpaceX.API.Device.WifiConfig.Network networks = 1100 [json_name="networks"];
	optional 	bool apply_networks = 1101 [json_name="applyNetworks"];
	optional 	uint64 incarnation = 43 [json_name="incarnation"];
	optional 	.SpaceX.API.Device.WifiConfig.WirelessMode wireless_mode_2ghz = 44 [json_name="wirelessMode2ghz"];
	optional 	bool apply_wireless_mode_2ghz = 1059 [json_name="applyWirelessMode2ghz"];
	optional 	.SpaceX.API.Device.WifiConfig.WirelessMode wireless_mode_5ghz = 45 [json_name="wirelessMode5ghz"];
	optional 	bool apply_wireless_mode_5ghz = 1060 [json_name="applyWirelessMode5ghz"];
	optional 	.SpaceX.API.Device.WifiConfig.WirelessMode wireless_mode_5ghz_high = 58 [json_name="wirelessMode5ghzHigh"];
	optional 	bool apply_wireless_mode_5ghz_high = 1070 [json_name="applyWirelessMode5ghzHigh"];
	optional 	.SpaceX.API.Device.WifiConfig.HTBandwidth ht_bandwidth_2ghz = 46 [json_name="htBandwidth2ghz"];
	optional 	bool apply_ht_bandwidth_2ghz = 1061 [json_name="applyHtBandwidth2ghz"];
	optional 	.SpaceX.API.Device.WifiConfig.HTBandwidth ht_bandwidth_5ghz = 47 [json_name="htBandwidth5ghz"];
	optional 	bool apply_ht_bandwidth_5ghz = 1062 [json_name="applyHtBandwidth5ghz"];
	optional 	.SpaceX.API.Device.WifiConfig.HTBandwidth ht_bandwidth_5ghz_high = 59 [json_name="htBandwidth5ghzHigh"];
	optional 	bool apply_ht_bandwidth_5ghz_high = 1071 [json_name="applyHtBandwidth5ghzHigh"];
	optional 	.SpaceX.API.Device.WifiConfig.VHTBandwidth vht_bandwidth = 48 [json_name="vhtBandwidth"];
	optional 	bool apply_vht_bandwidth = 1063 [json_name="applyVhtBandwidth"];
	optional 	.SpaceX.API.Device.WifiConfig.VHTBandwidth vht_bandwidth_5ghz_high = 60 [json_name="vhtBandwidth5ghzHigh"];
	optional 	bool apply_vht_bandwidth_5ghz_high = 1072 [json_name="applyVhtBandwidth5ghzHigh"];
	optional 	bool use_public_services = 55 [json_name="usePublicServices"];
	optional 	bool apply_use_public_services = 1068 [json_name="applyUsePublicServices"];
	optional 	bool disable_automated_speedtests = 56 [json_name="disableAutomatedSpeedtests"];
	optional 	bool apply_disable_automated_speedtests = 1069 [json_name="applyDisableAutomatedSpeedtests"];
	optional 	bool enable_umbilical_vlan = 61 [json_name="enableUmbilicalVlan"];
	optional 	bool apply_enable_umbilical_vlan = 1073 [json_name="applyEnableUmbilicalVlan"];
	repeated 	.SpaceX.API.Device.ClientName client_names = 62 [json_name="clientNames"];
	optional 	bool apply_client_names = 1074 [json_name="applyClientNames"];
	optional 	bool outdoor_mode = 63 [json_name="outdoorMode"];
	optional 	bool apply_outdoor_mode = 1075 [json_name="applyOutdoorMode"];
	optional 	bool disable_2ghz = 64 [json_name="disable2ghz"];
	optional 	bool apply_disable_2ghz = 1076 [json_name="applyDisable2ghz"];
	optional 	bool disable_5ghz = 65 [json_name="disable5ghz"];
	optional 	bool apply_disable_5ghz = 1077 [json_name="applyDisable5ghz"];
	optional 	bool disable_5ghz_high = 66 [json_name="disable5ghzHigh"];
	optional 	bool apply_disable_5ghz_high = 1078 [json_name="applyDisable5ghzHigh"];
	optional 	bool disable_x_mesh_backhaul = 67 [json_name="disableXMeshBackhaul"];
	optional 	bool apply_disable_x_mesh_backhaul = 1079 [json_name="applyDisableXMeshBackhaul"];
	optional 	string golden_bssid = 68 [json_name="goldenBssid"];
	optional 	bool apply_golden_bssid = 1080 [json_name="applyGoldenBssid"];
	optional 	.SpaceX.API.Device.IfaceType golden_iface_type = 69 [json_name="goldenIfaceType"];
	optional 	bool apply_golden_iface_type = 1081 [json_name="applyGoldenIfaceType"];
	optional 	.SpaceX.API.Device.TxPowerLevel tx_power_level_2ghz = 70 [json_name="txPowerLevel2ghz"];
	optional 	bool apply_tx_power_level_2ghz = 1082 [json_name="applyTxPowerLevel2ghz"];
	optional 	.SpaceX.API.Device.TxPowerLevel tx_power_level_5ghz = 71 [json_name="txPowerLevel5ghz"];
	optional 	bool apply_tx_power_level_5ghz = 1083 [json_name="applyTxPowerLevel5ghz"];
	optional 	.SpaceX.API.Device.TxPowerLevel tx_power_level_5ghz_high = 72 [json_name="txPowerLevel5ghzHigh"];
	optional 	bool apply_tx_power_level_5ghz_high = 1084 [json_name="applyTxPowerLevel5ghzHigh"];
	optional 	bool disable_pending_update_reboot = 73 [json_name="disablePendingUpdateReboot"];
	optional 	bool apply_disable_pending_update_reboot = 1088 [json_name="applyDisablePendingUpdateReboot"];
	repeated 	.SpaceX.API.Device.ClientConfig client_configs = 74 [json_name="clientConfigs"];
	optional 	bool apply_client_configs = 1089 [json_name="applyClientConfigs"];
	optional 	bool disable_set_wifi_config_from_controller = 75 [json_name="disableSetWifiConfigFromController"];
	optional 	bool apply_disable_set_wifi_config_from_controller = 1090 [json_name="applyDisableSetWifiConfigFromController"];
	optional 	bytes client_key = 76 [json_name="clientKey"];
	optional 	bool apply_client_key = 1091 [json_name="applyClientKey"];
	optional 	.SpaceX.API.Device.NoTrafficControl wan_no_traffic_control = 4001 [json_name="wanNoTrafficControl"];
	optional 	.SpaceX.API.Device.AckSuppression wan_ack_suppression = 4002 [json_name="wanAckSuppression"];
	optional 	.SpaceX.API.Device.CakeRateLimit wan_cake_rate_limit = 4003 [json_name="wanCakeRateLimit"];
	optional 	bool apply_wan_traffic_control = 1092 [json_name="applyWanTrafficControl"];
	optional 	int32 wan_host_dscp_mark = 77 [json_name="wanHostDscpMark"];
	optional 	bool apply_wan_host_dscp_mark = 1093 [json_name="applyWanHostDscpMark"];
	optional 	bool debug_pop_pings = 79 [json_name="debugPopPings"];
	optional 	bool apply_debug_pop_pings = 1095 [json_name="applyDebugPopPings"];
	optional 	bool debug_pings = 94 [json_name="debugPings"];
	optional 	bool apply_debug_pings = 1106 [json_name="applyDebugPings"];
	optional 	bool client_tester = 80 [json_name="clientTester"];
	optional 	bool apply_client_tester = 1096 [json_name="applyClientTester"];
	optional 	uint32 asset_class = 81 [json_name="assetClass"];
	optional 	bool apply_asset_class = 1099 [json_name="applyAssetClass"];
	optional 	bool disable_band_steering = 95 [json_name="disableBandSteering"];
	optional 	bool apply_disable_band_steering = 1109 [json_name="applyDisableBandSteering"];
	repeated 	string only_overflight_countries = 1110 [json_name="onlyOverflightCountries"];
	optional 	bool apply_only_overflight_countries = 1111 [json_name="applyOnlyOverflightCountries"];
	repeated 	.SpaceX.API.Device.WifiConfig.UnbridgedEthPort unbridged_eth_ports = 1112 [json_name="unbridgedEthPorts"];
	optional 	bool apply_unbridged_eth_ports = 1113 [json_name="applyUnbridgedEthPorts"];
	optional 	uint32 tag = 78 [json_name="tag"];
message MeshConfigsEntry {
	optional 	string key = 1 [json_name="key"];
	optional 	.SpaceX.API.Device.MeshConfig value = 2 [json_name="value"];
}

message MeshConfigsUpdatesEntry {
	optional 	string key = 1 [json_name="key"];
	optional 	.SpaceX.API.Device.MeshConfig value = 2 [json_name="value"];
}

message BasicServiceSet {
	optional 	string bssid = 1003 [json_name="bssid"];
	optional 	string ssid = 1005 [json_name="ssid"];
	optional 	.SpaceX.API.Device.AuthOpen auth_open = 2001 [json_name="authOpen"];
	optional 	.SpaceX.API.Device.AuthWpa2 auth_wpa2 = 2002 [json_name="authWpa2"];
	optional 	.SpaceX.API.Device.AuthWpa3 auth_wpa3 = 2003 [json_name="authWpa3"];
	optional 	.SpaceX.API.Device.AuthWpa2Wpa3 auth_wpa2_wpa3 = 2004 [json_name="authWpa2Wpa3"];
	optional 	.SpaceX.API.Device.AuthRadius auth_radius = 2005 [json_name="authRadius"];
	optional 	.SpaceX.API.Device.AuthOpenEncrypted auth_open_encrypted = 2006 [json_name="authOpenEncrypted"];
	optional 	.SpaceX.API.Device.WifiConfig.Band band = 1011 [json_name="band"];
	optional 	string iface_name = 1017 [json_name="ifaceName"];
	optional 	bool disable = 1013 [json_name="disable"];
	optional 	bool hidden = 1015 [json_name="hidden"];
}

message DnsStaticEntry {
	repeated 	string domains = 1000 [json_name="domains"];
	repeated 	string addresses = 1001 [json_name="addresses"];
}

message DnsForwardRule {
	repeated 	string domains = 1000 [json_name="domains"];
	repeated 	string server_addresses = 1001 [json_name="serverAddresses"];
}

message Network {
	optional 	string ipv4 = 1003 [json_name="ipv4"];
	optional 	uint32 dhcpv4_start = 1012 [json_name="dhcpv4Start"];
	optional 	uint32 dhcpv4_end = 1025 [json_name="dhcpv4End"];
	optional 	bool dhcp_disabled = 1015 [json_name="dhcpDisabled"];
	optional 	uint32 dhcpv4_lease_duration_s = 1016 [json_name="dhcpv4LeaseDurationS"];
	optional 	string domain = 1011 [json_name="domain"];
	repeated 	.SpaceX.API.Device.WifiConfig.BasicServiceSet basic_service_sets = 1007 [json_name="basicServiceSets"];
	optional 	bool client_isolation = 1008 [json_name="clientIsolation"];
	optional 	bool guest = 1009 [json_name="guest"];
	optional 	string landing = 1010 [json_name="landing"];
	optional 	bool landing_page_v2 = 1017 [json_name="landingPageV2"];
	optional 	bool sandbox_enabled = 1020 [json_name="sandboxEnabled"];
	repeated 	string sandbox_domain_allow_list = 1022 [json_name="sandboxDomainAllowList"];
	optional 	uint32 sandbox_id = 1023 [json_name="sandboxId"];
	optional 	bool internal = 1013 [json_name="internal"];
	optional 	uint32 vlan = 1014 [json_name="vlan"];
	optional 	.SpaceX.API.Device.CaptivePortal captive_portal = 1024 [json_name="captivePortal"];
	optional 	uint32 network_groups = 1026 [json_name="networkGroups"];
	repeated 	.SpaceX.API.Device.WifiConfig.DnsStaticEntry dns_static_entries = 1027 [json_name="dnsStaticEntries"];
	repeated 	.SpaceX.API.Device.WifiConfig.DnsForwardRule dns_forward_rules = 1028 [json_name="dnsForwardRules"];
}

message UnbridgedEthPort {
	optional 	uint32 lan_port_index = 1 [json_name="lanPortIndex"];
	optional 	string ip = 2 [json_name="ip"];
	optional 	string gateway = 3 [json_name="gateway"];
	repeated 	.SpaceX.API.Device.WifiConfig.UnbridgedEthPort.StaticRoute static_routes = 4 [json_name="staticRoutes"];
message StaticRoute {
	optional 	string subnet = 1 [json_name="subnet"];
	optional 	uint32 network_groups = 2 [json_name="networkGroups"];
}

}

	enum Security {
		UNKNOWN = 0;
		WPA2 = 1;
		WPA3 = 2;
		WPA2WPA3 = 3;
	}
	enum Band {
		RF_UNKNOWN = 0;
		RF_2GHZ = 2;
		RF_5GHZ = 5;
		RF_5GHZ_HIGH = 6;
	}
	enum WirelessMode {
		WIRELESS_MODE_DEFAULT = 0;
		A_ONLY = 1;
		B_ONLY = 2;
		G_ONLY = 3;
		N_ONLY = 4;
		B_G_MIXED = 5;
		A_N_MIXED = 6;
		G_N_MIXED = 7;
		B_G_N_MIXED = 8;
		A_AN_AC_MIXED = 9;
		AN_AC_MIXED = 10;
		B_G_N_AX_MIXED = 11;
		A_AN_AC_AX_MIXED = 12;
	}
	enum HTBandwidth {
		HT_BANDWIDTH_DEFAULT = 0;
		HT_BANDWIDTH_20_MHZ = 1;
		HT_BANDWIDTH_20_OR_40_MHZ = 2;
	}
	enum VHTBandwidth {
		VHT_BANDWIDTH_DEFAULT = 0;
		VHT_BANDWIDTH_DISABLED = 1;
		VHT_BANDWIDTH_80_MHZ = 2;
		VHT_BANDWIDTH_160_MHZ = 3;
		VHT_BANDWIDTH_80_PLUS_80_MHZ = 4;
	}
}

message WeeklyBlockSchedule {
	repeated 	.SpaceX.API.Device.WeeklyBlockSchedule.BlockRange block_ranges = 1 [json_name="blockRanges"];
	optional 	string group_id = 2 [json_name="groupId"];
message BlockRange {
	optional 	uint32 start_minutes = 1 [json_name="startMinutes"];
	optional 	uint32 end_minutes = 2 [json_name="endMinutes"];
}

}

message ClientConfig {
	optional 	uint32 client_id = 1 [json_name="clientId"];
	optional 	string mac_address = 2 [json_name="macAddress"];
	optional 	string given_name = 3 [json_name="givenName"];
	repeated 	.SpaceX.API.Device.WeeklyBlockSchedule weekly_block_schedules = 5 [json_name="weeklyBlockSchedules"];
	optional 	string group_id = 6 [json_name="groupId"];
}

message ClientName {
	optional 	string mac_address = 1 [json_name="macAddress"];
	optional 	string given_name = 2 [json_name="givenName"];
}

message AuthOpen {
}

message AuthWpa2 {
	optional 	string password = 1 [json_name="password"];
}

message AuthWpa3 {
	optional 	string password = 1 [json_name="password"];
}

message AuthWpa2Wpa3 {
	optional 	string password = 1 [json_name="password"];
}

message AuthOpenEncrypted {
}

message AuthRadius {
	optional 	string server = 1 [json_name="server"];
	optional 	string server_ca = 3 [json_name="serverCa"];
	optional 	string server_ca_base_64 = 4 [json_name="serverCaBase64"];
	optional 	string password = 2 [json_name="password"];
	optional 	.SpaceX.API.Device.Protocol transport = 5 [json_name="transport"];
}

message NoTrafficControl {
}

message AckSuppression {
	optional 	uint32 ack_mark = 1 [json_name="ackMark"];
	optional 	float htb_ack_queue_rate = 2 [json_name="htbAckQueueRate"];
	optional 	float htb_ack_queue_ceil = 3 [json_name="htbAckQueueCeil"];
	optional 	float cake_queue_bandwidth = 4 [json_name="cakeQueueBandwidth"];
	optional 	bool cake_ack_filter_aggressive = 5 [json_name="cakeAckFilterAggressive"];
	optional 	float cake_manual_rtt = 6 [json_name="cakeManualRtt"];
}

message CakeRateLimit {
	optional 	uint32 host_mark = 1 [json_name="hostMark"];
	optional 	float bandwidth = 2 [json_name="bandwidth"];
	optional 	.SpaceX.API.Device.CakePriorityQueueParameter priority_queue_parameter = 3 [json_name="priorityQueueParameter"];
	optional 	.SpaceX.API.Device.CakeAckFilter ack_filter = 4 [json_name="ackFilter"];
	optional 	float manual_rtt = 6 [json_name="manualRtt"];
}

enum MeshAuth {
	MESH_AUTH_UNKNOWN = 0;
	MESH_AUTH_NEW = 1;
	MESH_AUTH_TRUSTED = 2;
	MESH_AUTH_UNTRUSTED = 3;
}

enum CakeAckFilter {
	NO_ACK_FILTER = 0;
	ACK_FILTER = 1;
	ACK_FILTER_AGGRESSIVE = 2;
}

enum CakePriorityQueueParameter {
	DIFFSERV3 = 0;
	DIFFSERV4 = 1;
	PRECEDENCE = 2;
	BEST_EFFORT = 3;
}

